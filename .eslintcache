[{"/Users/Stephanie/Desktop/bw-u2/Front-End/src/index.js":"1","/Users/Stephanie/Desktop/bw-u2/Front-End/src/App.js":"2","/Users/Stephanie/Desktop/bw-u2/Front-End/src/reportWebVitals.js":"3","/Users/Stephanie/Desktop/bw-u2/Front-End/src/components/LoginForm.js":"4","/Users/Stephanie/Desktop/bw-u2/Front-End/src/components/CreatePlantForm.js":"5","/Users/Stephanie/Desktop/bw-u2/Front-End/src/validation/CreatePlantFormSchema.js":"6","/Users/Stephanie/Desktop/bw-u2/Front-End/src/validation/LoginFormSchema.js":"7"},{"size":500,"mtime":1609782235328,"results":"8","hashOfConfig":"9"},{"size":299,"mtime":1609794133462,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1609782235328,"results":"11","hashOfConfig":"9"},{"size":2308,"mtime":1609794624550,"results":"12","hashOfConfig":"9"},{"size":2962,"mtime":1609794562659,"results":"13","hashOfConfig":"9"},{"size":328,"mtime":1609787699148,"results":"14","hashOfConfig":"9"},{"size":214,"mtime":1609787673990,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17o9crg",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/Stephanie/Desktop/bw-u2/Front-End/src/index.js",[],"/Users/Stephanie/Desktop/bw-u2/Front-End/src/App.js",[],"/Users/Stephanie/Desktop/bw-u2/Front-End/src/reportWebVitals.js",[],"/Users/Stephanie/Desktop/bw-u2/Front-End/src/components/LoginForm.js",["32"],"import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport loginSchema from '../validation/LoginFormSchema';\n\n// Login Form Initial Objects\nconst blankLoginForm = {\n    username: '',\n    password: '',\n}\n\nconst initialLoginErrors = {\n    name: '',\n    password: '',\n}\n\nfunction LoginForm(props) {\n\n  // Login Form Use States and event handlers\n  const [loginFormValues, setLoginFormValues] = useState(blankLoginForm);\n  const [user, setUser] = useState([]);\n  const [loginErrors, setLoginErrors] = useState(initialLoginErrors);\n\n\n    \n    const changeLoginValues = (event) => {\n        const {name, value} = event.target;\n        updateLoginForm(name, value);\n    };\n\n    const uponSubmitLogin = (event) => {\n        event.preventDefault();\n        submitLoginForm();\n    };\n\n    const updateLoginForm = (name, value) => {\n\n        yup.reach(loginSchema, name)\n         .validate(value)\n         .then(() => {\n           setLoginErrors({...loginErrors, [name]: '',})\n           setLoginFormValues({...loginFormValues, [name]: value});\n         })\n         .catch((error) => {\n           setLoginErrors({...loginErrors, [name]: error.errors[0],})\n         })\n    }\n    \n    const submitLoginForm = () => {\n        const userLoginInfo = {\n          username: loginFormValues.username,\n          password: loginFormValues.password,\n        }\n    \n        setUser(userLoginInfo);\n        setLoginFormValues(blankLoginForm);\n    }\n\n\n    return (\n        <div>\n            <form onSubmit = {uponSubmitLogin}>\n                <label> Username\n                    <input name = 'username'\n                     type = 'text' \n                     value = {loginFormValues.username}\n                     onChange = {changeLoginValues} />\n                </label>\n\n                <label> Password\n                    <input name = 'password'\n                     type = 'password' \n                     value = {loginFormValues.password} \n                     onChange = {changeLoginValues} />\n                </label>\n                <button>Submit</button>\n            </form>\n            \n            <div className = 'errors-container'>\n                <p>{loginErrors.username}</p>\n                <p>{loginErrors.password}</p>\n            </div>\n        </div>\n    )\n};\n\nexport default LoginForm;",["33","34"],"/Users/Stephanie/Desktop/bw-u2/Front-End/src/components/CreatePlantForm.js",[],"/Users/Stephanie/Desktop/bw-u2/Front-End/src/validation/CreatePlantFormSchema.js",[],"/Users/Stephanie/Desktop/bw-u2/Front-End/src/validation/LoginFormSchema.js",[],{"ruleId":"35","severity":1,"message":"36","line":20,"column":10,"nodeType":"37","messageId":"38","endLine":20,"endColumn":14},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-global-assign","no-unsafe-negation"]